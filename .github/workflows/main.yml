name: Main workflow

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      LOCAL_VERSION_NUMBER_FILE: build_version.txt
    steps:
    - name: Check out the project
      uses: actions/checkout@v2.3.1
    - name: Set up AWS command line interface
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version
    - id: read_version_file
      name: Read version.txt
      run: |
        text_file=`cat ./util/version.txt`
        echo "The version file's contents are: $text_file"
        echo "::set-output name=version_file::$text_file"
    - id: development_version
      name: Determine development version
      run: |
        set +e
        aws s3api head-object --bucket anthem-workflows --key $(echo "${{ github.repository }}" | tr - _)/${LOCAL_VERSION}_version.txt
        if [ $? -eq 0 ]; then
          aws s3 cp s3://anthem-workflows/$(echo "${{ github.repository }}" | tr - _)/${LOCAL_VERSION}_version.txt $LOCAL_VERSION_NUMBER_FILE
        else
          echo 0 > $LOCAL_VERSION_NUMBER_FILE
        fi
        set -e
        dev_version=`cat $LOCAL_VERSION_NUMBER_FILE`
        echo "The development version number is $dev_version"
        rm $LOCAL_VERSION_NUMBER_FILE
        expr $dev_version + 1 > $LOCAL_VERSION_NUMBER_FILE
        dev_version=`cat $LOCAL_VERSION_NUMBER_FILE`
        echo "The development version number for the current run is $dev_version"
        echo "::set-output name=development_version::$dev_version"
      env:
        LOCAL_VERSION: ${{ steps.read_version_file.outputs.version_file }}
    - name: Upload development version
      run: |
        set +e
        aws s3api head-object --bucket anthem-workflows --key $(echo "${{ github.repository }}" | tr - _)/${LOCAL_VERSION}_version.txt
        if [ $? -eq 0 ]; then
          aws s3 rm s3://anthem-workflows/$(echo "${{ github.repository }}" | tr - _)/${LOCAL_VERSION}_version.txt
        fi
        set -e
        aws s3 cp $LOCAL_VERSION_NUMBER_FILE s3://anthem-workflows/$(echo "${{ github.repository }}" | tr - _)/${LOCAL_VERSION}_version.txt
      env:
        LOCAL_VERSION: ${{ steps.read_version_file.outputs.version_file }}
    - id: version
      name: Determine version
      run: |
        version="${LOCAL_VERSION/-dev/-dev.$DEVELOPMENT_VERSION_NUMBER}"
        echo "The version of the project is $version"
        echo "::set-output name=version::$version"
      env:
        LOCAL_VERSION: ${{ steps.read_version_file.outputs.version_file }}
        DEVELOPMENT_VERSION_NUMBER: ${{ steps.development_version.outputs.development_version }}
    - name: Set development version to version.txt
      run: sed -i "s/$LOCAL_VERSION/${{ steps.version.outputs.version }}/g" util/version.txt
      env:
        LOCAL_VERSION: ${{ steps.read_version_file.outputs.version_file }}
    - name: Build the licence
      run: ./util/build
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2
      with:
        name: effective-elegy-${{ steps.version.outputs.version }}
        path: dist/effective-elegy-*
